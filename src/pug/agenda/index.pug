extends ../_layout.pug
block variables
  - title = "議程 Agenda"
block head
  link(rel="stylesheet", href="assets/css/base.css?version="+timestamp)
  link(rel="stylesheet", href="assets/css/agenda.css?version="+timestamp)
block main
  #modal: .inner-modal
    .modal-head.flex.p-4.items-start
      .head-group
        h4.font-bold.me-3
        .tag-group
        .info-group
        .btn-group.flex.gap-2.my-2
          a(data-i18n="agenda.btn.qa") 線上提問
          a(data-i18n="agenda.btn.slide") 簡報連結
          a(data-i18n="agenda.btn.cowrite") 共同筆記
      button.modal-close.text-2xl.text-dark.ms-auto
        i.fa-solid.fa-xmark
    .modal-body.p-4
  #tag-group
    .flex.flex-wrap.gap-2.text-sm.p-5
      each tag in schedule.tags
        button.rounded-full.text-white.px-2(data-target=tag.id, data-i18n=`tag.${tag.id}`)= tag.zh.name
      each type in schedule.session_types
        if type.id != 'R'
          button.rounded-full.text-white.px-2(data-i18n=`session_type.${type.id}`, data-target=type.id)= type.zh.name
  button#tag-group-toggle.rounded-full.bg-secondary.text-white.fixed.block.right-4.bottom-4.w-12.h-12.pt-1.z-40.text-lg: i.fa-solid.fa-tags

  main.container.relative
    - let rooms = ['R0', 'R1', 'R2', 'RH']
    .pt-6.pb-3.sticky.top-0.w-full.z-20.bg-white(class="md:mt-12")
      .flex.justify-center
        button.rounded-lg.bg-white.drop-shadow-lg.mx-2.px-3.py-1.text-sm#day1(class="hover:bg-neutral-100")
          .font-bold Day 1
          .text-neutral-500(data-i18n="agenda.day-1.text") 5 月 4 日（六）
        button.rounded-lg.bg-white.drop-shadow-lg.mx-2.px-3.py-1.text-sm#day2(class="hover:bg-neutral-100")
          .font-bold Day 2
          .text-neutral-500(data-i18n="agenda.day-2.text") 5 月 5 日（日）
      .flex.mt-5.w-full#room-btn-group(class="md:hidden")
        button.py-1.grow(data-id='all') ALL
        each room in schedule.rooms
          if rooms.includes(room.id)
            button.py-1.grow(data-id=room.id)= room.id
      .mt-5.hidden.relative.agenda-grid(class="md:grid")
        .block= ""
        each room in schedule.rooms
          if rooms.includes(room.id)
            .bg-secondary.text-white.font-medium.text-center.px-4.py-2.mx-4(class="max-md:hidden", data-i18n=`room.${room.id}`)= room.zh.name

    .mt-10.mb-20
      h2.mb-8#day Day 1

      - let speakers = {}
      - for (let speaker of schedule.speakers) speakers[speaker.id] = speaker

      - let session_types = {}
      - for (let session_type of schedule.session_types) session_types[session_type.id] = session_type

      - let tags = {}
      - for (let tag of schedule.tags) tags[tag.id] = tag

      mixin agenda-session-title(session)
        .agenda-session.rounded-t-xl.rounded-b-sm.cursor-pointer.bg-highlight-200.p-4.z-10.relative(data-id=session.id, data-title="true",  data-tags=([...session.tags, session.type, session.language].filter((t) => !!t).join(','))): .sticky(class="md:top-40")
          .text-sm.text-highlight-800(data-i18n=`session_type.${session.type}`)= session_types[session.type].zh.name
          .font-bold.text-highlight-950(data-i18n=`session.${session.id}.title`)= session.zh.title
          .flex.flex-col.items-stretch.more-info
              each speaker_id in session.speakers
                .text-sm.text-neutral-700(data-i18n=`speakers.${speaker_id}.name`)= speakers[speaker_id].zh.name

      mixin agenda-session(session)
        if session.type == 'R'
          .agenda-session.grow.shrink-0.flex.items-center.justify-center.bg-neutral-300.rounded-xl.p-4.z-10.relative
            .font-bold.text-neutral-900(data-i18n=`session.${session.id}.title`)= session.zh.title
        else
          .agenda-session.grow.shrink-0.rounded-sm.cursor-pointer.bg-neutral-100.p-4.z-10.relative(data-id=session.id, data-tags=([...session.tags, session.type, session.language].filter((t) => !!t).join(','))): .sticky(class="md:top-40")
            .font-bold.text-neutral-800.mb-1(data-i18n=`session.${session.id}.title`)= session.zh.title
            .flex.flex-col.items-stretch.more-info
              each speaker_id in session.speakers
                .text-sm.text-neutral-700(data-i18n=`speakers.${speaker_id}.name`)= speakers[speaker_id].zh.name
              .text-xs.text-white.my-2.flex.flex-wrap.gap-1.tag-group
                if !['R', 'E'].includes(session.type)
                  span.bg-secondary.rounded-full.px-2(data-i18n=`session_type.${session.type}`)= session_types[session.type].zh.name
                if session.language
                  span.bg-neutral-500.rounded-full.px-2(data-i18n=`language.${session.language}`)= session.language === 'en' ? '英語' : '華語'
                if session.tags[0]
                  each tag_id in session.tags
                    span.bg-neutral-400.rounded-full.px-2(data-i18n=`tag.${tag_id}`)= tags[tag_id].zh.name
              //.text-right.text-sm.text-neutral-500(class="md:hidden") @#{session['broadcast']?session['broadcast'].join(','):session['room']}

      .hidden.relative.agenda-grid(class="md:grid")
        each time, key in schedule.sessions_timemap
          - let styles = `grid-area: ${key} / time`
          .block.agenda-timeline.z-0(style=styles, data-day=key < 1440 ? '1' : '2')
            .font-medium(class="translate-y-[-50%]")= time
        each sessions, start_t in schedule.sessions_by_t
          - let title_session = null
          each session in sessions.sessions
            if session.start_t === session.end_t
              - title_session = session
            else
              - let styles = `grid-area: ${session.start_t} / ${session.room} / ${session.end_t} / ${session.type == 'R' ? 'end' : (session.broadcast ? 'RH' : session.room)};`
              .block.p-3.session-block.flex.flex-col(style=styles, data-room=session.room, data-broadcast=(session.broadcast ? 'true' : 'false'), data-day=(session.start_t < 1440 ? '1' : '2'))
                if title_session && session.start_t === title_session.start_t
                  +agenda-session-title(title_session)
                  - title_session = null
                +agenda-session(session)

      .flex.flex-col.agenda-list(class="md:hidden")
        each sessions, start_t in schedule.sessions_by_t
          .py-3.session-block(data-rooms=sessions.rooms.join(','), data-day=(start_t < 1440 ? '1' : '2'))= sessions.t
          each session in [...sessions.sessions].sort((a, b) => rooms.indexOf(a.room) - rooms.indexOf(b.room))
            - let rooms = [session.room]
            if session.broadcast
              - rooms = rooms.concat(session.broadcast)
            .block.py-3.session-block(data-rooms=rooms.join(','), data-day=(session.start_t < 1440 ? '1' : '2'))
              if session.start_t === session.end_t
                +agenda-session-title(session)
              else
                +agenda-session(session)


block script
  script(src='https://cdn.jsdelivr.net/npm/marked/marked.min.js')
  script(src='assets/js/agenda.js?version='+timestamp)
